{"filter":false,"title":"user_risk.py","tooltip":"/aws_services_py/user_risk.py","undoManager":{"mark":88,"position":88,"stack":[[{"start":{"row":0,"column":0},"end":{"row":227,"column":18},"action":"insert","lines":["","","","import sys","","# Surpress warnings:","def warn(*args, **kwargs):","    pass","import warnings","warnings.warn = warn","","#%pylab inline","#get_ipython().run_line_magic('matplotlib', 'inline')","#get_ipython().run_line_magic('config', \"InlineBackend.figure_formats = ['retina']\")","import pandas as pd","import seaborn as sns","import numpy as np","import matplotlib.pyplot as plt","from sklearn.linear_model import Lasso","from sklearn.preprocessing import PolynomialFeatures","from sklearn.model_selection import train_test_split","from sklearn.metrics import r2_score","from sklearn.preprocessing import StandardScaler","s = StandardScaler()","sns.set()","","## Load in the transaction level data, this is flexible and can include any field ","#df = pd.read_csv(\"user_scores_backtest.csv\") #df = pandas dataframe","df = pd.read_csv(\"https://www.dropbox.com/s/ieqco06hryopg59/user_scores_backtest.csv?dl=1\")","## target variable this is flexible and can include any continuous numerical ","y_col = \"resulted_in_reconcilation\" ## known values of whether or not a transaction resulted in a reconciliation","","","#print(\"Number of rows in the data:\", df.shape[0])","#print(\"Number of columns in the data:\", df.shape[1])","data = df.copy() # Keep a copy our original data ","","df.nunique(axis=0)","","# columns that are numerical","num_cols = df.select_dtypes('number').columns","#num_cols","","#remove  ids and other unique columns ","df.dropna(how='all', axis=1, inplace=True)#inplace makes it a copy of itself","","#drop columns where every value is unique and the type is object","all_rows = len(df)","for col in df.columns:","    if len(df[col].unique()) == all_rows :","        if df[col].dtypes == object:","            df.drop(col,inplace=True,axis=1)","df.nunique(axis=0)","","# eliminate rows with nan values before one hot encoding","df = df.dropna(axis=0)","","# Get a Pd.Series consisting of all the string categoricals","one_hot_encode_cols = df.dtypes[df.dtypes == object]  # filtering by string categoricals","one_hot_encode_cols = one_hot_encode_cols.index.tolist()  # list of categorical fields","#one_hot_encode_cols","","# Encode these columns as categoricals so one hot encoding works on split data (if desired)","for col in one_hot_encode_cols:","    df[col] = pd.Categorical(df[col])","","# Do the one hot encoding","df = pd.get_dummies(data, columns=one_hot_encode_cols)","#df.info()","","# get column headers as predictors - must remove y column first","df_x = df.drop(y_col, axis=1)","predictors = df_x.columns","predictors","","","#split into X and y data for processing","X = df.drop(y_col, axis=1)","y = df[y_col]","","# fix all nan in X","# in this case it deletes rows with any nan to clean data ","X = X.dropna(axis=0)","","#polynomial transformations","# pf = PolynomialFeatures(degree=2, include_bias=False,)","# X = pf.fit_transform(X)","","## split data into training and test sets","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=72018)","","## data transformations","X_train_s = s.fit_transform(X_train)","X_test_s = s.transform(X_test)","","## LogisticRegression","from sklearn.linear_model import LogisticRegression","from sklearn import metrics","lr = LogisticRegression()","lr_result = lr.fit(X_train_s,y_train)","pred = lr.predict(X_test)","","#","#","# start of test on user level data","## Load in the transaction level data, this is flexible and can include any field ","#df2 = pd.read_csv(\"user_scores.csv\") #df2 = pandas dataframe","df2 = pd.read_csv(\"https://www.dropbox.com/s/nwmjzgbtbp7a8jd/user_scores.csv?dl=1\")","data2 = df2.copy() # Keep a copy our original data ","df2.nunique(axis=0)","#print(df2)","# columns that are numerical","num_cols = df2.select_dtypes('number').columns","#num_cols","#remove  ids and other unique columns ","df2.dropna(how='all', axis=1, inplace=True)#inplace makes it a copy of itself","#drop columns where every value is unique and the type is object","all_rows = len(df2)","for col in df2.columns:","    if len(df2[col].unique()) == all_rows :","        if df2[col].dtypes == object:","            df2.drop(col,inplace=True,axis=1)","df2.nunique(axis=0)","# eliminate rows with nan values before one hot encoding","df2 = df2.dropna(axis=0)","","# Get a Pd.Series consisting of all the string categoricals","one_hot_encode_cols = df2.dtypes[df2.dtypes == object]  # filtering by string categoricals","one_hot_encode_cols = one_hot_encode_cols.index.tolist()  # list of categorical fields","#one_hot_encode_cols","# Encode these columns as categoricals so one hot encoding works on split data2 (if desired)","for col in one_hot_encode_cols:","    df2[col] = pd.Categorical(df2[col])","# Do the one hot encoding","df2 = pd.get_dummies(data2, columns=one_hot_encode_cols)","#split into X and y data2 for processing","X2 = df2.drop(y_col, axis=1)","# fix all nan in X","# in this case it deletes rows with any nan to clean data2 ","#print(X2.shape)","X2 = X2.dropna(axis=0)","print(X2.shape)","#print(X2.info())","#polynomial transformations","# pf2 = PolynomialFeatures(degree=2, include_bias=False,)","# X2 = pf2.fit_transform(X2)","","X2_users = s.transform(X2)","","pred2 = lr.predict(X2_users)","print(pred2)","#create a useable list of coeficients","mydict = {k:v for k,v in zip(predictors,lr.coef_[0])}","#mydict","#print(dir(lr_result))","","# #print(lr.C)","# # print(lr.__class__)","# # print(lr.__delattr__)","# # print(lr.__dict__)","# # print(lr.__dir__)","# # print(lr.__doc__)","# # print(lr.__eq__)","# # print(lr.__format__)","# # print(lr.__ge__)","# # print(lr.__getattribute__)","# # print(lr.__getstate__)","# # print(lr.__gt__)","# # print(lr.__hash__)","# # print(lr.__init__)","# # print(lr.__init_subclass__)","# # print(lr.__le__)","# # print(lr.__lt__)","# # print(lr.__module__)","# # print(lr.__ne__)","# # print(lr.__new__)","# # print(lr.__reduce__)","# # print(lr.__reduce_ex__)","# # print(lr.__repr__)","# # print(lr.__setattr__)","# # print(lr.__setstate__)","# # print(lr.__sizeof__)","# # print(lr.__str__)","# # print(lr.__subclasshook__)","# # print(lr.__weakref__)","# # print(lr._check_feature_names)","# # print(lr._check_n_features)","# # print(lr._estimator_type)","# # print(lr._get_param_names)","# # print(lr._get_tags)","# # print(lr._more_tags)","# # print(lr._predict_proba_lr)","# # #print(lr._repr_html_)","# # print(lr._repr_html_inner)","# # print(lr._repr_mimebundle_)","# # print(lr._validate_data)","# # print(lr.class_weight)","# # print(lr.classes_)","# # print(lr.coef_)","# print(lr.decision_function())","# print(lr.densify)","# print(lr.dual)","# print(lr.fit)","# print(lr.fit_intercept)","# print(lr.get_params)","# print(lr.intercept_)","# print(lr.intercept_scaling)","# print(lr.l1_ratio)","# print(lr.max_iter)","# print(lr.multi_class)","# print(lr.n_features_in_)","# print(lr.n_iter_)","# print(lr.n_jobs)","# print(lr.penalty)","# print(lr.predict)","# print(lr.predict_log_proba)","# print(lr.predict_proba)","# print(lr.random_state)","# print(lr.score)","# print(lr.set_params)","# print(lr.solver)","# print(lr.sparsify)","# print(lr.tol)","# print(lr.verbose)","# print(lr.warm_start)","","","sys.stdout.flush()"],"id":90}],[{"start":{"row":27,"column":68},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":91}],[{"start":{"row":28,"column":0},"end":{"row":28,"column":67},"action":"insert","lines":["df = pd.read_csv(\"user_scores_backtest.csv\") #df = pandas dataframe"],"id":92}],[{"start":{"row":29,"column":0},"end":{"row":29,"column":1},"action":"insert","lines":["#"],"id":93},{"start":{"row":29,"column":1},"end":{"row":29,"column":2},"action":"insert","lines":["#"]}],[{"start":{"row":29,"column":2},"end":{"row":29,"column":3},"action":"insert","lines":[" "],"id":94}],[{"start":{"row":27,"column":1},"end":{"row":27,"column":2},"action":"insert","lines":[" "],"id":95}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":69},"action":"remove","lines":["# df = pd.read_csv(\"user_scores_backtest.csv\") #df = pandas dataframe"],"id":96},{"start":{"row":26,"column":82},"end":{"row":27,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":19},"action":"remove","lines":["import pandas as pd"],"id":97},{"start":{"row":14,"column":0},"end":{"row":16,"column":22},"action":"insert","lines":["import boto3","import pandas as pd","from io import BytesIO"]}],[{"start":{"row":27,"column":0},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":98},{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":29,"column":0},"end":{"row":39,"column":31},"action":"insert","lines":["s3 = boto3.resource('s3')","#static                #bucket name                        #file name","# obj = s3.Object('sagemaker-data-feierstein','user_score_both_all_fields_20230516.csv')","# body = obj.get()['Body'].read","# print(body)","","bucket_name = 'sagemaker-data-feierstein'","file_name = 'user_score_both_all_fields_20230516.csv'","obj = s3.Object(bucket_name, file_name)","body = obj.get()['Body'].read()","df = pd.read_csv(BytesIO(body))"],"id":99}],[{"start":{"row":39,"column":31},"end":{"row":40,"column":0},"action":"insert","lines":["",""],"id":100},{"start":{"row":40,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["",""]},{"start":{"row":41,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":44,"column":0},"end":{"row":44,"column":1},"action":"insert","lines":["#"],"id":101},{"start":{"row":44,"column":1},"end":{"row":44,"column":2},"action":"insert","lines":["#"]}],[{"start":{"row":44,"column":2},"end":{"row":44,"column":3},"action":"insert","lines":[" "],"id":102}],[{"start":{"row":42,"column":0},"end":{"row":43,"column":0},"action":"remove","lines":["",""],"id":103},{"start":{"row":41,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["",""]},{"start":{"row":40,"column":0},"end":{"row":41,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":40,"column":0},"end":{"row":40,"column":82},"action":"remove","lines":["## Load in the transaction level data, this is flexible and can include any field "],"id":104},{"start":{"row":39,"column":31},"end":{"row":40,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":34,"column":0},"end":{"row":35,"column":0},"action":"insert","lines":["",""],"id":105}],[{"start":{"row":35,"column":0},"end":{"row":35,"column":82},"action":"insert","lines":["## Load in the transaction level data, this is flexible and can include any field "],"id":106}],[{"start":{"row":30,"column":0},"end":{"row":33,"column":13},"action":"remove","lines":["#static                #bucket name                        #file name","# obj = s3.Object('sagemaker-data-feierstein','user_score_both_all_fields_20230516.csv')","# body = obj.get()['Body'].read","# print(body)"],"id":107}],[{"start":{"row":30,"column":0},"end":{"row":31,"column":0},"action":"remove","lines":["",""],"id":108}],[{"start":{"row":43,"column":0},"end":{"row":43,"column":1},"action":"remove","lines":["#"],"id":109},{"start":{"row":44,"column":0},"end":{"row":44,"column":1},"action":"remove","lines":["#"]}],[{"start":{"row":51,"column":0},"end":{"row":51,"column":9},"action":"remove","lines":["#num_cols"],"id":110},{"start":{"row":50,"column":45},"end":{"row":51,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":82,"column":10},"end":{"row":83,"column":0},"action":"remove","lines":["",""],"id":111}],[{"start":{"row":111,"column":1},"end":{"row":112,"column":0},"action":"insert","lines":["",""],"id":112},{"start":{"row":112,"column":0},"end":{"row":112,"column":1},"action":"insert","lines":["/"]},{"start":{"row":112,"column":1},"end":{"row":112,"column":2},"action":"insert","lines":["*"]}],[{"start":{"row":112,"column":1},"end":{"row":112,"column":2},"action":"remove","lines":["*"],"id":113},{"start":{"row":112,"column":0},"end":{"row":112,"column":1},"action":"remove","lines":["/"]}],[{"start":{"row":112,"column":0},"end":{"row":112,"column":2},"action":"insert","lines":["''"],"id":114}],[{"start":{"row":112,"column":2},"end":{"row":112,"column":3},"action":"insert","lines":["'"],"id":115}],[{"start":{"row":234,"column":0},"end":{"row":234,"column":2},"action":"insert","lines":["''"],"id":116}],[{"start":{"row":234,"column":2},"end":{"row":234,"column":3},"action":"insert","lines":["'"],"id":117}],[{"start":{"row":108,"column":25},"end":{"row":109,"column":0},"action":"insert","lines":["",""],"id":118},{"start":{"row":109,"column":0},"end":{"row":109,"column":1},"action":"insert","lines":["p"]},{"start":{"row":109,"column":1},"end":{"row":109,"column":2},"action":"insert","lines":["r"]},{"start":{"row":109,"column":2},"end":{"row":109,"column":3},"action":"insert","lines":["i"]},{"start":{"row":109,"column":3},"end":{"row":109,"column":4},"action":"insert","lines":["n"]},{"start":{"row":109,"column":4},"end":{"row":109,"column":5},"action":"insert","lines":["t"]}],[{"start":{"row":109,"column":5},"end":{"row":109,"column":7},"action":"insert","lines":["()"],"id":119}],[{"start":{"row":109,"column":6},"end":{"row":109,"column":7},"action":"insert","lines":["p"],"id":120},{"start":{"row":109,"column":7},"end":{"row":109,"column":8},"action":"insert","lines":["r"]},{"start":{"row":109,"column":8},"end":{"row":109,"column":9},"action":"insert","lines":["e"]},{"start":{"row":109,"column":9},"end":{"row":109,"column":10},"action":"insert","lines":["d"]}],[{"start":{"row":108,"column":25},"end":{"row":109,"column":0},"action":"insert","lines":["",""],"id":121}],[{"start":{"row":109,"column":0},"end":{"row":109,"column":11},"action":"insert","lines":["print(pred)"],"id":122}],[{"start":{"row":82,"column":0},"end":{"row":82,"column":1},"action":"insert","lines":["p"],"id":123},{"start":{"row":82,"column":1},"end":{"row":82,"column":2},"action":"insert","lines":["r"]},{"start":{"row":82,"column":2},"end":{"row":82,"column":3},"action":"insert","lines":["i"]},{"start":{"row":82,"column":3},"end":{"row":82,"column":4},"action":"insert","lines":["n"]},{"start":{"row":82,"column":4},"end":{"row":82,"column":5},"action":"insert","lines":["t"]},{"start":{"row":82,"column":5},"end":{"row":82,"column":6},"action":"insert","lines":["("]}],[{"start":{"row":82,"column":16},"end":{"row":82,"column":17},"action":"insert","lines":[")"],"id":124}],[{"start":{"row":110,"column":0},"end":{"row":110,"column":11},"action":"remove","lines":["print(pred)"],"id":125}],[{"start":{"row":108,"column":25},"end":{"row":109,"column":0},"action":"insert","lines":["",""],"id":126},{"start":{"row":109,"column":0},"end":{"row":109,"column":1},"action":"insert","lines":["p"]},{"start":{"row":109,"column":1},"end":{"row":109,"column":2},"action":"insert","lines":["r"]},{"start":{"row":109,"column":2},"end":{"row":109,"column":3},"action":"insert","lines":["i"]},{"start":{"row":109,"column":3},"end":{"row":109,"column":4},"action":"insert","lines":["n"]},{"start":{"row":109,"column":4},"end":{"row":109,"column":5},"action":"insert","lines":["t"]}],[{"start":{"row":109,"column":5},"end":{"row":109,"column":7},"action":"insert","lines":["()"],"id":127}],[{"start":{"row":109,"column":6},"end":{"row":109,"column":7},"action":"insert","lines":["c"],"id":128},{"start":{"row":109,"column":7},"end":{"row":109,"column":8},"action":"insert","lines":["a"]},{"start":{"row":109,"column":8},"end":{"row":109,"column":9},"action":"insert","lines":["l"]},{"start":{"row":109,"column":9},"end":{"row":109,"column":10},"action":"insert","lines":["l"]},{"start":{"row":109,"column":10},"end":{"row":109,"column":11},"action":"insert","lines":["a"]},{"start":{"row":109,"column":11},"end":{"row":109,"column":12},"action":"insert","lines":["p"]},{"start":{"row":109,"column":12},"end":{"row":109,"column":13},"action":"insert","lines":["b"]},{"start":{"row":109,"column":13},"end":{"row":109,"column":14},"action":"insert","lines":["l"]},{"start":{"row":109,"column":14},"end":{"row":109,"column":15},"action":"insert","lines":["e"]}],[{"start":{"row":109,"column":14},"end":{"row":109,"column":15},"action":"remove","lines":["e"],"id":129},{"start":{"row":109,"column":13},"end":{"row":109,"column":14},"action":"remove","lines":["l"]},{"start":{"row":109,"column":12},"end":{"row":109,"column":13},"action":"remove","lines":["b"]},{"start":{"row":109,"column":11},"end":{"row":109,"column":12},"action":"remove","lines":["p"]}],[{"start":{"row":109,"column":11},"end":{"row":109,"column":12},"action":"insert","lines":["b"],"id":130},{"start":{"row":109,"column":12},"end":{"row":109,"column":13},"action":"insert","lines":["l"]},{"start":{"row":109,"column":13},"end":{"row":109,"column":14},"action":"insert","lines":["e"]}],[{"start":{"row":109,"column":14},"end":{"row":109,"column":16},"action":"insert","lines":["()"],"id":131}],[{"start":{"row":109,"column":15},"end":{"row":109,"column":16},"action":"insert","lines":["l"],"id":132},{"start":{"row":109,"column":16},"end":{"row":109,"column":17},"action":"insert","lines":["r"]}],[{"start":{"row":109,"column":15},"end":{"row":109,"column":17},"action":"remove","lines":["lr"],"id":133},{"start":{"row":109,"column":15},"end":{"row":109,"column":24},"action":"insert","lines":["lr_result"]}],[{"start":{"row":82,"column":0},"end":{"row":82,"column":1},"action":"insert","lines":["#"],"id":134}],[{"start":{"row":109,"column":14},"end":{"row":109,"column":15},"action":"remove","lines":["("],"id":135},{"start":{"row":109,"column":13},"end":{"row":109,"column":14},"action":"remove","lines":["e"]},{"start":{"row":109,"column":12},"end":{"row":109,"column":13},"action":"remove","lines":["l"]},{"start":{"row":109,"column":11},"end":{"row":109,"column":12},"action":"remove","lines":["b"]},{"start":{"row":109,"column":10},"end":{"row":109,"column":11},"action":"remove","lines":["a"]},{"start":{"row":109,"column":9},"end":{"row":109,"column":10},"action":"remove","lines":["l"]},{"start":{"row":109,"column":8},"end":{"row":109,"column":9},"action":"remove","lines":["l"]},{"start":{"row":109,"column":7},"end":{"row":109,"column":8},"action":"remove","lines":["a"]},{"start":{"row":109,"column":6},"end":{"row":109,"column":7},"action":"remove","lines":["c"]}],[{"start":{"row":109,"column":15},"end":{"row":109,"column":16},"action":"remove","lines":[")"],"id":136}],[{"start":{"row":108,"column":25},"end":{"row":109,"column":0},"action":"insert","lines":["",""],"id":137}],[{"start":{"row":109,"column":0},"end":{"row":109,"column":26},"action":"insert","lines":["coefficients = model.coef_"],"id":138}],[{"start":{"row":109,"column":15},"end":{"row":109,"column":20},"action":"remove","lines":["model"],"id":139},{"start":{"row":109,"column":15},"end":{"row":109,"column":17},"action":"insert","lines":["lr"]}],[{"start":{"row":110,"column":6},"end":{"row":110,"column":15},"action":"remove","lines":["lr_result"],"id":140},{"start":{"row":110,"column":6},"end":{"row":110,"column":8},"action":"insert","lines":["lr"]}],[{"start":{"row":110,"column":6},"end":{"row":110,"column":8},"action":"remove","lines":["lr"],"id":141},{"start":{"row":110,"column":6},"end":{"row":110,"column":18},"action":"insert","lines":["coefficients"]}],[{"start":{"row":108,"column":25},"end":{"row":109,"column":0},"action":"insert","lines":["",""],"id":142}],[{"start":{"row":109,"column":0},"end":{"row":109,"column":25},"action":"insert","lines":["predictors = df_x.columns"],"id":143}],[{"start":{"row":111,"column":6},"end":{"row":111,"column":18},"action":"remove","lines":["coefficients"],"id":144},{"start":{"row":111,"column":6},"end":{"row":111,"column":16},"action":"insert","lines":["predictors"]}],[{"start":{"row":112,"column":6},"end":{"row":112,"column":10},"action":"remove","lines":["pred"],"id":145},{"start":{"row":112,"column":6},"end":{"row":112,"column":18},"action":"insert","lines":["coefficients"]}],[{"start":{"row":112,"column":19},"end":{"row":113,"column":0},"action":"insert","lines":["",""],"id":146}],[{"start":{"row":113,"column":0},"end":{"row":115,"column":13},"action":"insert","lines":["mydict = {k:v for k,v in zip(predictors,lr.coef_[0])}","#mydict","print(mydict)"],"id":147}],[{"start":{"row":115,"column":13},"end":{"row":116,"column":0},"action":"insert","lines":["",""],"id":148}],[{"start":{"row":111,"column":0},"end":{"row":111,"column":1},"action":"insert","lines":["#"],"id":149},{"start":{"row":111,"column":1},"end":{"row":111,"column":2},"action":"insert","lines":["#"]}],[{"start":{"row":112,"column":0},"end":{"row":112,"column":1},"action":"insert","lines":["#"],"id":150},{"start":{"row":112,"column":1},"end":{"row":112,"column":2},"action":"insert","lines":["#"]}],[{"start":{"row":101,"column":13},"end":{"row":101,"column":22},"action":"remove","lines":["transform"],"id":151},{"start":{"row":101,"column":13},"end":{"row":101,"column":26},"action":"insert","lines":["fit_transform"]}],[{"start":{"row":108,"column":24},"end":{"row":108,"column":25},"action":"insert","lines":["_"],"id":152},{"start":{"row":108,"column":25},"end":{"row":108,"column":26},"action":"insert","lines":["s"]}],[{"start":{"row":108,"column":27},"end":{"row":109,"column":0},"action":"insert","lines":["",""],"id":153},{"start":{"row":109,"column":0},"end":{"row":110,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":109,"column":0},"end":{"row":110,"column":0},"action":"remove","lines":["",""],"id":154},{"start":{"row":108,"column":27},"end":{"row":109,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":114,"column":7},"end":{"row":115,"column":0},"action":"insert","lines":["",""],"id":155},{"start":{"row":115,"column":0},"end":{"row":115,"column":1},"action":"insert","lines":["p"]},{"start":{"row":115,"column":1},"end":{"row":115,"column":2},"action":"insert","lines":["r"]},{"start":{"row":115,"column":2},"end":{"row":115,"column":3},"action":"insert","lines":["i"]},{"start":{"row":115,"column":3},"end":{"row":115,"column":4},"action":"insert","lines":["n"]},{"start":{"row":115,"column":4},"end":{"row":115,"column":5},"action":"insert","lines":["t"]}],[{"start":{"row":115,"column":5},"end":{"row":115,"column":7},"action":"insert","lines":["()"],"id":156}],[{"start":{"row":115,"column":6},"end":{"row":115,"column":7},"action":"insert","lines":["l"],"id":157},{"start":{"row":115,"column":7},"end":{"row":115,"column":8},"action":"insert","lines":["r"]}],[{"start":{"row":116,"column":0},"end":{"row":116,"column":1},"action":"insert","lines":["#"],"id":158}],[{"start":{"row":115,"column":6},"end":{"row":115,"column":7},"action":"insert","lines":["d"],"id":159},{"start":{"row":115,"column":7},"end":{"row":115,"column":8},"action":"insert","lines":["i"]},{"start":{"row":115,"column":8},"end":{"row":115,"column":9},"action":"insert","lines":["r"]},{"start":{"row":115,"column":9},"end":{"row":115,"column":10},"action":"insert","lines":["("]}],[{"start":{"row":115,"column":12},"end":{"row":115,"column":13},"action":"insert","lines":[")"],"id":160}],[{"start":{"row":116,"column":14},"end":{"row":117,"column":0},"action":"insert","lines":["",""],"id":161}],[{"start":{"row":117,"column":0},"end":{"row":117,"column":14},"action":"insert","lines":["print(dir(lr))"],"id":162}],[{"start":{"row":117,"column":6},"end":{"row":117,"column":10},"action":"remove","lines":["dir("],"id":163}],[{"start":{"row":117,"column":8},"end":{"row":117,"column":9},"action":"remove","lines":[")"],"id":164}],[{"start":{"row":117,"column":8},"end":{"row":117,"column":9},"action":"insert","lines":["."],"id":165},{"start":{"row":117,"column":9},"end":{"row":117,"column":10},"action":"insert","lines":["s"]},{"start":{"row":117,"column":10},"end":{"row":117,"column":11},"action":"insert","lines":["o"]},{"start":{"row":117,"column":11},"end":{"row":117,"column":12},"action":"insert","lines":["l"]},{"start":{"row":117,"column":12},"end":{"row":117,"column":13},"action":"insert","lines":["v"]},{"start":{"row":117,"column":13},"end":{"row":117,"column":14},"action":"insert","lines":["e"]},{"start":{"row":117,"column":14},"end":{"row":117,"column":15},"action":"insert","lines":["r"]}],[{"start":{"row":116,"column":14},"end":{"row":117,"column":0},"action":"insert","lines":["",""],"id":166},{"start":{"row":117,"column":0},"end":{"row":117,"column":1},"action":"insert","lines":["p"]},{"start":{"row":117,"column":1},"end":{"row":117,"column":2},"action":"insert","lines":["r"]},{"start":{"row":117,"column":2},"end":{"row":117,"column":3},"action":"insert","lines":["i"]},{"start":{"row":117,"column":3},"end":{"row":117,"column":4},"action":"insert","lines":["n"]},{"start":{"row":117,"column":4},"end":{"row":117,"column":5},"action":"insert","lines":["t"]},{"start":{"row":117,"column":5},"end":{"row":117,"column":6},"action":"insert","lines":["\""]}],[{"start":{"row":117,"column":6},"end":{"row":117,"column":7},"action":"insert","lines":["l"],"id":167},{"start":{"row":117,"column":7},"end":{"row":117,"column":8},"action":"insert","lines":["r"]},{"start":{"row":117,"column":8},"end":{"row":117,"column":9},"action":"insert","lines":["."]},{"start":{"row":117,"column":9},"end":{"row":117,"column":10},"action":"insert","lines":["s"]}],[{"start":{"row":117,"column":10},"end":{"row":117,"column":11},"action":"insert","lines":["o"],"id":168},{"start":{"row":117,"column":11},"end":{"row":117,"column":12},"action":"insert","lines":["l"]},{"start":{"row":117,"column":12},"end":{"row":117,"column":13},"action":"insert","lines":["v"]},{"start":{"row":117,"column":13},"end":{"row":117,"column":14},"action":"insert","lines":["e"]},{"start":{"row":117,"column":14},"end":{"row":117,"column":15},"action":"insert","lines":["r"]},{"start":{"row":117,"column":15},"end":{"row":117,"column":16},"action":"insert","lines":["\""]}],[{"start":{"row":117,"column":16},"end":{"row":117,"column":17},"action":"insert","lines":[")"],"id":169}],[{"start":{"row":117,"column":5},"end":{"row":117,"column":6},"action":"insert","lines":["("],"id":170}],[{"start":{"row":13,"column":84},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":171}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":14},"action":"insert","lines":["import inspect"],"id":172}],[{"start":{"row":118,"column":18},"end":{"row":119,"column":0},"action":"insert","lines":["",""],"id":173}],[{"start":{"row":119,"column":0},"end":{"row":119,"column":30},"action":"insert","lines":["print(inspect.getmembers(obj))"],"id":174}],[{"start":{"row":119,"column":25},"end":{"row":119,"column":28},"action":"remove","lines":["obj"],"id":175},{"start":{"row":119,"column":25},"end":{"row":119,"column":26},"action":"insert","lines":["l"]},{"start":{"row":119,"column":26},"end":{"row":119,"column":27},"action":"insert","lines":["r"]}],[{"start":{"row":120,"column":0},"end":{"row":120,"column":1},"action":"insert","lines":["#"],"id":176}],[{"start":{"row":118,"column":10},"end":{"row":118,"column":16},"action":"remove","lines":["solver"],"id":177},{"start":{"row":118,"column":10},"end":{"row":118,"column":32},"action":"insert","lines":["inspect.getmembers(lr)"]}],[{"start":{"row":118,"column":9},"end":{"row":118,"column":10},"action":"remove","lines":["."],"id":178},{"start":{"row":118,"column":8},"end":{"row":118,"column":9},"action":"remove","lines":["r"]},{"start":{"row":118,"column":7},"end":{"row":118,"column":8},"action":"remove","lines":["l"]}]]},"ace":{"folds":[],"scrolltop":293.19873046875,"scrollleft":0,"selection":{"start":{"row":122,"column":0},"end":{"row":122,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1712849213455,"hash":"226a619a289f82f387e5fbdac73e78c9fe1e824f"}